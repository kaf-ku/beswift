const playBoard=document.querySelector(".play-board"),scoreElement=document.querySelector(".score"),highScoreElement=document.querySelector(".high-score"),controls=document.querySelectorAll(".controls i");let gameOver=!1,foodX,foodY,snakeX=5,snakeY=5,velocityX=0,velocityY=0,snakeBody=[],setIntervalId,score=0,highScore=localStorage.getItem("high-score")||0;highScoreElement.innerText=`High Score: ${highScore}`;const updateFoodPosition=()=>{foodX=Math.floor(30*Math.random())+1,foodY=Math.floor(30*Math.random())+1},handleGameOver=()=>{clearInterval(setIntervalId),alert("Game Over, BESian! Press OK to replay..."),location.reload()},changeDirection=e=>{"ArrowUp"===e.key&&1!=velocityY?(velocityX=0,velocityY=-1):"ArrowDown"===e.key&&-1!=velocityY?(velocityX=0,velocityY=1):"ArrowLeft"===e.key&&1!=velocityX?(velocityX=-1,velocityY=0):"ArrowRight"===e.key&&-1!=velocityX&&(velocityX=1,velocityY=0)};controls.forEach(e=>e.addEventListener("click",()=>changeDirection({key:e.dataset.key})));const initGame=()=>{if(gameOver)return handleGameOver();let e=`<div class="food" style="grid-area: ${foodY} / ${foodX}"></div>`;snakeX===foodX&&snakeY===foodY&&(updateFoodPosition(),snakeBody.push([foodY,foodX]),highScore=++score>=highScore?score:highScore,localStorage.setItem("high-score",highScore),scoreElement.innerText=`Score: ${score}`,highScoreElement.innerText=`High Score: ${highScore}`),snakeX+=velocityX,snakeY+=velocityY;for(let o=snakeBody.length-1;o>0;o--)snakeBody[o]=snakeBody[o-1];if(snakeBody[0]=[snakeX,snakeY],snakeX<=0||snakeX>30||snakeY<=0||snakeY>30)return gameOver=!0;for(let r=0;r<snakeBody.length;r++)e+=`<div class="head" style="grid-area: ${snakeBody[r][1]} / ${snakeBody[r][0]}"></div>`,0!==r&&snakeBody[0][1]===snakeBody[r][1]&&snakeBody[0][0]===snakeBody[r][0]&&(gameOver=!0);playBoard.innerHTML=e};updateFoodPosition(),setIntervalId=setInterval(initGame,100),document.addEventListener("keyup",changeDirection);